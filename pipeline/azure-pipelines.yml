trigger:
- main

variables:
  vmImageName: 'ubuntu-latest'
  dockerfileDirectory: './src/WorkerContagem'

stages:
- stage: YAMLScanning
  displayName: YAML Scanning stage
  jobs:
  - job: YAMLScanning
    displayName: YAMLScanning
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        pip install checkov
      displayName: Instalar o Checkov via pip
    - script: |
        checkov
        checkov --help
      displayName: Testar a instalacao do Checkov
    - script: |
        mkdir results
      displayName: Criar diretorio /results para armazenar os resultados gerados com o Checkov
    - script: |
        checkov -d $(dockerfileDirectory) --framework dockerfile -o cli -o sarif --output-file-path ./results/results-dockerfile.sarif
      displayName: Executar analise com o Checkov
    - script: |
        cd results
        ls
      displayName: Exibir arquivos gerados em /results
      condition: always()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: './results/results-dockerfile.sarif'
        ArtifactName: 'CodeAnalysisLogs'
        publishLocation: 'Container'
      displayName: Publicacao de relatorio SARIF
      condition: failed()
- stage: Build
  displayName: Build stage
  dependsOn: YAMLScanning
  jobs:
  - job: Build
    displayName: Simulacao de build
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: echo 'Passou pela analise de seguranca!!!'